---
- name: Install k3s
  hosts: localhost
  become: true
  become_user: root
  vars:
    ansible_python_interpreter: /usr/bin/python3
  tasks:

    - name: Check k3s binary exists
      ansible.builtin.stat:
        path: /usr/local/bin/k3s
      register: K3S_BIN

    - name: Get k3s bin from s3 if not downloaded
      amazon.aws.aws_s3:
        region: "{{ REGION }}"
        mode: get
        bucket: "{{ PREFIX }}-{{ SUFFIX }}"
        object: "data/downloads/k3s/{{ item }}"
        dest: "/usr/local/bin/k3s"
      with_items:
        - k3s{% if ansible_architecture == "x86_64" %}{% else %}-arm64{% endif %}
      when: not K3S_BIN.stat.exists
      retries: 10
      delay: 1

    - name: Mode k3s bin file
      ansible.builtin.file:
        path: "/usr/local/bin/{{ item }}"
        state: file
        mode: 0750
        owner: root
      with_items:
        - k3s

    - name: Mode k3s directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: 0750
      with_items:
        - /var/lib/rancher/k3s/agent/images/
        - /etc/rancher/k3s/

    - name: Check k3s tar exists
      ansible.builtin.stat:
        path: /var/lib/rancher/k3s/agent/images/k3s-airgap-images-{% if ansible_architecture == "x86_64" %}amd64{% else %}arm64{% endif %}.tar
      register: K3S_TAR

    - name: Get k3s tar from s3 if not downloaded
      amazon.aws.aws_s3:
        region: "{{ REGION }}"
        mode: get
        bucket: "{{ PREFIX }}-{{ SUFFIX }}"
        object: "data/downloads/k3s/{{ item }}"
        dest: "/var/lib/rancher/k3s/agent/images/{{ item }}"
      with_items:
        - k3s-airgap-images-{% if ansible_architecture == "x86_64" %}amd64{% else %}arm64{% endif %}.tar
      when:
        - not K3S_TAR.stat.exists
      retries: 10
      delay: 1

    - name: Get K3S_TOKEN ssm parameter
      ansible.builtin.set_fact:
        K3S_TOKEN: "{{ lookup('aws_ssm', '/' + PREFIX + '-' + SUFFIX + '/' + 'K3S_TOKEN', decrypt=true, region=REGION) }}"
      no_log: true

    - name: Get DB_PASS ssm parameter
      ansible.builtin.set_fact:
        DB_PASS: "{{ lookup('aws_ssm', '/' + PREFIX + '-' + SUFFIX + '/' + 'DB_PASS', decrypt=true, region=REGION) }}"
      no_log: true

    - name: Exec rancher script
      ansible.builtin.shell: |
         ./install.sh
      environment:
        K3S_DATASTORE_ENDPOINT: "postgres://{{ PREFIX }}{{ SUFFIX }}:{{ DB_PASS }}@{{ DB_ENDPOINT }}/{{ PREFIX }}{{ SUFFIX }}"
        K3S_TOKEN: "{{ K3S_TOKEN }}"
        K3S_URL: "{% if K3S_ROLE == 'master' %}{% elif K3S_ROLE == 'worker' %}{{ K3S_URL }}{% endif %}"
        INSTALL_K3S_SKIP_DOWNLOAD: "true"
        INSTALL_K3S_EXEC: "{% if K3S_ROLE == 'master' %}server{% elif K3S_ROLE == 'worker' %}agent{% endif %}"
      register: exec_rancher
      changed_when: exec_rancher.rc == 0
      failed_when: exec_rancher.rc != 0

    - name: S3 put kubeconfig - masters
      amazon.aws.aws_s3:
        region: "{{ REGION }}"
        mode: put
        bucket: "{{ PREFIX }}-{{ SUFFIX }}"
        object: "data/k3s/k3s.yaml"
        src: "/etc/rancher/k3s/k3s.yaml"
      retries: 60
      delay: 1
      register: s3_put_kubeconfig
      until: s3_put_kubeconfig is not failed
      when:
        - K3S_ROLE == 'master'

    - name: S3 get kubeconfig - workers
      amazon.aws.aws_s3:
        region: "{{ REGION }}"
        mode: get
        bucket: "{{ PREFIX }}-{{ SUFFIX }}"
        object: "data/k3s/k3s.yaml"
        dest: "/etc/rancher/k3s/k3s.yaml"
      retries: 60
      delay: 1
      register: s3_put_kubeconfig
      until: s3_put_kubeconfig is not failed
      when:
        - K3S_ROLE == 'worker'

    - name: Set kubeconfig - workers
      ansible.builtin.file:
        path: /etc/rancher/k3s/k3s.yaml
        state: file
        mode: 0600
        owner: root

    - name: Label self - worker
      ansible.builtin.shell: >
         /usr/local/bin/k3s kubectl --server {{ K3S_URL }}
         --kubeconfig /etc/rancher/k3s/k3s.yaml label node
         {{ ansible_hostname }}.{{ PREFIX }}-{{ SUFFIX }}.internal node-role.kubernetes.io/agent=true
      retries: 60
      delay: 1
      register: label_self
      until: label_self is not failed
      when:
        - K3S_ROLE == 'worker'

    - name: Clear (rm) kubeconfig - workers
      ansible.builtin.file:
        path: /etc/rancher/k3s/k3s.yaml
        state: absent
        mode: 0600
        owner: root
      when:
        - K3S_ROLE == 'worker'
